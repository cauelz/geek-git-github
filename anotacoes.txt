


************** Comandos **************

- git init: inicializa um repositorio git.
    --bare: om o comando git init --bare você está criando um repositório que é pushable. 
        Geralmente os repositórios bare são criados no servidor e são considerados repositórios para armazenamento, em contraste aos repositórios que vão nas máquinas dos desenvolvedores que seriam os repositórios de desenvolvimento, criados com o comando git init (sem o --bare).
        Além do mais, repositórios bare não possuem working directory, tornando impossível editar e commitar arquivos nesse repositório.
- git branch: cria uma nova branch.
    - opcao -d <nome branch>: deleta a branch desejada. Mas se nao tiver mergeada com a branch principal, ela nao vai deixar.
    - opcao -D <nome branch>: deleta a branch desejada sem precisar mergear com a branch principal
    
- git checkout <branch destino>: sai da branch atual e vai para a branch destino.
    - git checkout -b <nome branch>: cria uma nova branch e já muda pra ela.
- git merge: é quando juntamos duas branches diferentes. Muitas vezes podem ter conflitos para serem resolvidos.
- git rebase: funciona de forma parecida com o merge, a diferenca é que ele adiciona na linha do tempo principal da branch destino os commits.
O que pode ser bacana para a visualizacao dos commits, mas que pode ser ruim se você quiser visualizar quando foram inseridos os commits e de onde vieram.
- git fetch: baixa os arquivos do repositorio origem. Nao faz o merge, apenas baixa os arquivos.
- git pull: é a juncao dos comandos git fetch e git rebase/merge.

